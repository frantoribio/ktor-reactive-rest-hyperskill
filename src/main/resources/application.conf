# Configure the application based on the environment variables
ktor {
    deployment {
        port = 8080
        port = ${?PORT}
        ## SSL, you need to enable it
        sslPort = 8083
        sslPort = ${?SSL_PORT}
    }

    # Configure the main module
    application {
        modules = [ joseluisgs.dev.ApplicationKt.module ]
    }

    ## Development mode
    # Enable development mode. Recommended to set it via -Dktor.deployment.environment=development
    # development = true
    deployment {
        ## Watch for changes in this directory and automatically reload the application if any file changes.
        watch = [ classes, resources ]
    }

    ## Modo de ejecuci√≥n
    environment = dev
    environment = ${?KTOR_ENV}

    ## To enable SSL, you need to generate a certificate and configure it here
    security {
        ssl {
           keyStore = cert/server_keystore.p12
           keyAlias = "serverKeyPair"
           keyStorePassword = "1234567"
           privateKeyPassword = "1234567"
        }
    }
}

# Configure the database
database {
    driver = "h2"
    protocol ="mem"
    user = "sa"
    user = ${?DATABASE_USER}
    password = ""
    password = ${?DATABASE_PASSWORD}
    database = "r2dbc:h2:mem:///rackets;DB_CLOSE_DELAY=-1"
    database = ${?DATABASE_NAME}
    ## Init database data
    initDatabaseData = true
}

# Configure Cache
cache {
    maximumCacheSize = 1000
    expireAfterAccess = 86400
}

# Storage
storage {
    uploadDir = "uploads"
    endpoint = api/storage
}

# JWT
jwt {
    secret = "IL0v3L34rn1ngKt0rWithJ0s3Lu1sGS4ndHyp3r$k1ll"
    realm = "rackets-ktor"
    ## Expiration time: 3600s (1 hour)
    expiration = "3600"
    issuer = "rackets-ktor"
    audience = "rackets-ktor-auth"
}



